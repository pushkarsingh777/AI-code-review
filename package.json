{
  "name": "wingman-code-agent",
  "displayName": "Wingman Code Agent", 
  "description": "",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.78.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "wingman-code-agent.reviewCode",
        "title": "Wingman: Review the selected code."
      },
      {
        "command": "wingman-code-agent.commentCode",
        "title": "Wingman: Add a comment to selected code."
      },
      {
        "command": "wingman-code-agent.complexity",
        "title": "Wingman: Analyse Time Complexity."
      },
      {
        "command": "wingman-code-agent.openGeminiChat",
        "title": "Wingman: Open the Chatbot."
      },
      {
        "command": "wingman-code-agent.nameFunction",
        "title": "Wingman: Name the selected function."
      },
      {
        "command": "wingman-code-agent.testcases",
        "title": "Wingman: Generate testcases for this code."
      },
      {
        "command": "wingman-code-agent.toggleAutoSuggestions",
        "title": "Wingman: Toggle Auto Suggestions"
      }
    ],
    "configuration": [
      {
        "title": "Wingman Code Agent: Google Gemini",
        "properties": {
          "google.gemini.apiKey": {
            "type": [
              "string",
              "nah bruv you aint getting my API!!!"
            ],
            "default": "nah bruv you aint getting my API!!!"
          },
          "google.gemini.textModel": {
            "type": [
              "string"
            ],
            "default": "models/gemini-1.5-flash",
            "markdownDescription": "Provide the name of the model you want to use. Choose from the [base models](https://ai.google.dev/models/gemini) or your own [tuned model](https://ai.google.dev/docs/model_tuning_guidance)."
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.2.5",
    "@types/vscode": "^1.78.0",
    "@typescript-eslint/eslint-plugin": "^5.59.8",
    "@typescript-eslint/parser": "^5.59.8",
    "@vscode/test-electron": "^2.3.2",
    "eslint": "^8.41.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "typescript": "^5.1.3"
  },
  "dependencies": {
    "@google/generative-ai": "^0.3.0",
    "dotenv": "^16.1.4"
  }
}
